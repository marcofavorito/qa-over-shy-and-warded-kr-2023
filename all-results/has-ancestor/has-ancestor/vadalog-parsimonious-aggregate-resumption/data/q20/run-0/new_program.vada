
hasAncestor(X,Y) :- person(X).
personHarmful(Y) :- hasAncestor(X,Y).
hasAncestor(X,Y) :- personHarmful(X).

@output("q").

q(X0)  ?- person(X0), hasAncestor(X0,X1), hasAncestor(X1, X2), hasAncestor(X2, X3), hasAncestor(X3, X4), hasAncestor(X4, X5), hasAncestor(X5, X6), hasAncestor(X6, X7), hasAncestor(X7, X8), hasAncestor(X8, X9), hasAncestor(X9, X10), hasAncestor(X10, X11), hasAncestor(X11, X12), hasAncestor(X12, X13), hasAncestor(X13, X14), hasAncestor(X14, X15), hasAncestor(X15, X16), hasAncestor(X16, X17), hasAncestor(X17, X18), hasAncestor(X18, X19), hasAncestor(X19, X20).
@input("person").
@bind("person", "csv", "/home/marcofavorito/workfolder/datalog-benchmarking/datasets/has-ancestor/vadalog/data", "person.data").